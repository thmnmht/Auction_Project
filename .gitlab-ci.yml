image: ubuntu:16.04

stages:
  - build
  - prepare
  - test
  - deploy

services:
  - mysql

variables:
  # Configure mysql environment variables (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: "TestDB"
  MYSQL_ROOT_PASSWORD: "1q2w3e4r"




before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - apt-get update -qq
  - apt-get install -qq git
  - 'which ssh-agent || ( apt install -qq openssh-client )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'


build:
  stage: build
  image: gradle
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle


prepare:
  stage: prepare
  image: mysql
    script:
      - service mysql start
      - echo "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('password');" | mysql -u root
      - echo "SELECT 'OK';" | mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -h mysql "$MYSQL_DATABASE"
      - mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -h localhost < "data/db/scripts/create-db.sql"
      - mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -h localhost < "data/db/scripts/init-db-tables.sql"



test:
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

deploy:
  stage: deploy
  script:
    - ssh root@192.168.10.150 "systemctl restart Auction_Service"
    - ssh root@5.253.24.159 "systemctl restart Auction_Service"
